<Window x:Class="test.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:test"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <ListBox x:Name="rediobutton" ItemsSource="{Binding MenuList}" HorizontalAlignment="Left" Height="129" Margin="215,51,0,0" VerticalAlignment="Top" Width="100">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <RadioButton  GroupName="name" Content="{Binding name}" Click="RadioButton_Click"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>




        <!--<StackPanel Orientation="Vertical">
            --><!--<ListBox x:Name="StudentListBox" Foreground="Black" ItemsSource="{Binding MenuList}" SelectionChanged="ListBox_SelectionChanged" HorizontalAlignment="Left" Height="192" Margin="125,70,0,0" VerticalAlignment="Top" Width="280">
                <ListBox.Style>
                    <Style TargetType="{x:Type ListBox}">
                        <EventSetter Event="MouseDoubleClick" Handler="ListBox_MouseDoubleClick"></EventSetter>
                    </Style>
                </ListBox.Style>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="欧耶制作"></TextBlock>
                            <TextBlock Text="{Binding name}"></TextBlock>
                            <TextBlock Text="{Binding age}"></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>-->

            <!--<ListView Height="287" Margin="0,0,10.4,0" ItemsSource="{Binding MenuList}">
                --><!--<ListView.Style>
                    <Style TargetType="{x:Type ListView}">
                        <EventSetter Event="MouseDoubleClick" Handler="ListBox_MouseDoubleClick"></EventSetter>
                    </Style>
                </ListView.Style>-->
                <!--<ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding name}"></TextBlock>
                            <TextBlock Text="{Binding age}"></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>--><!--
                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn Width="300" Header="Name" DisplayMemberBinding="{Binding name}"></GridViewColumn>
                            <GridViewColumn Width="300" Header="Age" DisplayMemberBinding="{Binding age}"></GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </ListView>--><!--



            <TreeView Foreground="Black" x:Name="TreeView" Height="500" Margin="0,0,0.4,0">
                --><!--<TreeViewItem Header="1">
                    <TreeViewItem Header="11"></TreeViewItem>
                    <TreeViewItem Header="22"></TreeViewItem>
                </TreeViewItem>
                <TreeViewItem Header="2">
                    <TreeViewItem Header="11"></TreeViewItem>
                </TreeViewItem>--><!--
            </TreeView>
            --><!--
                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn Width="300" Header="Name" DisplayMemberBinding="{Binding name}"></GridViewColumn>
                            <GridViewColumn Width="300" Header="Age" DisplayMemberBinding="{Binding age}"></GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </ListView>-->



            <StackPanel Orientation="Horizontal">
                <!--<TextBlock Margin="50,10,20,10" Text="请输入姓名:"/>
                <TextBox x:Name="Name" Width="200" Margin="10,5"/>-->
                <Button Content="添加" Margin="30,5" Height="30" Width="100" Command="{Binding AddAction}"/>
            </StackPanel>
        <!--</StackPanel>-->
        
        
        

    </Grid>
</Window>


private void RadioButton_Click(object sender, RoutedEventArgs e)
        {
            var r = sender as RadioButton;
            string name = (r.DataContext as Student).name;
        }


      MainViewModel继承BindableBase就可以实现  RaisePropertyChanged(nameof(MenuList));
      
      mvvm搭建： MainWindow 新建一个MainViewModel传自己作为参数，
      
      
      
      //MainWindow
      public MainWindow()
        {
            InitializeComponent();
            mv = new MainViewModel(this);
        }

        public MainViewModel mv
        {
            set { DataContext = value; }
            get { return DataContext as MainViewModel; }
        }
        //就好了      
        

        //选择的对象
         public List<Student> select;

        public IList selects
        {
            set { select = value.Cast<Student>().ToList(); }
            get { return select; }
        }
        
        AddAction = new DelegateCommand(OnAddExecute);
            MenuList = new ObservableCollection<Student>();
            MenuList.Add(new Student("佳爷",60));
            MenuList.Add(new Student("佳哥", 23));
            MenuList.Add(new Student("香香", 18));
            MenuList.Add(new Student("香爷", 20));
            MenuList.Add(new Student("柠檬", 60));
            MenuList.Add(new Student("凯凯", 23));
            MenuList.Add(new Student("阳哥", 18));
            MenuList.Add(new Student("磊磊", 20));
            //TreeViewTest(@"D:\Data");

             public ObservableCollection<Student> MenuList { set; get; }
             
             ////TreeView
        //private void TreeViewTest(string path)
        //{
        //    TreeViewItem t = TreeViewCallBack(new DirectoryInfo(path));
        //    //主Items
        //    if (t!=null) View.TreeView.Items.Add(t);
        //}
        //private TreeViewItem TreeViewCallBack(DirectoryInfo di)
        //{
        //    if (Directory.Exists(di.FullName))
        //    {//如果是文件夹，则返回添加
        //        TreeViewItem t = new TreeViewItem();
        //        t.Header = di.Name;
        //        foreach (var d in di.GetDirectories())
        //        {
        //            TreeViewItem tt = TreeViewCallBack(d);
        //            if (tt != null)
        //            {
        //                tt.Header = d.Name;
        //                t.Items.Add(tt);
        //            }                       
        //        }             
        //        return t;
        //    }
        //    return null;           
        //}

        //TreeView
        private void TreeViewTest(string path)
        {
            List<string> dirs = new List<string>();
            List<TreeViewItem> items = new List<TreeViewItem>();            
            dirs.Add(path);
            while(dirs.Any())
            {
                string dir = dirs.First();
                TreeViewItem t = new TreeViewItem();
                t.Header = dir.Substring(dir.LastIndexOf('\\') + 1);
                items.Add(t);

                foreach (string p in Directory.GetFileSystemEntries(dir))
                {
                    if (Directory.Exists(p)) dirs.Add(p);
                }
                
                dirs.Remove(dir);
            }
